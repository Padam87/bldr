#!/usr/bin/env php
<?php

error_reporting(-1);
ini_set('display_errors', 1);


/**
 * This file is part of Bldr.io.
 *
 * (c) Aaron Scherer <aequasi@gmail.com>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

function glob_r($pattern, $flags = 0)
{
    $files = glob($pattern, $flags);

    foreach (glob(dirname($pattern).'/*', GLOB_ONLYDIR | GLOB_NOSORT) as $dir) {
        $files = array_merge($files, glob_r($dir.'/'.basename($pattern), $flags));
    }

    return $files;
}

function glob_recursive($pattern, $flags = 0)
{
    if (strpos($pattern, '**') !== false) {
        return glob_r($pattern, $flags);
    }

    return glob($pattern, $flags);
}

$autoloaders = [
    getcwd().'/vendor/autoload.php',
    __DIR__.'/../vendor/autoload.php',
    __DIR__.'/../../../autoload.php'
];

$loaded = [];
foreach ($autoloaders as $autoloader) {
    if (file_exists($autoloader)) {
        @$fileHash = sha1_file($autoloader);
        echo $fileHash."\n";
        if (!in_array($fileHash, $loaded)) {
            require $autoloader;
            $loaded[] = $fileHash;
        }
    }
}

if (!sizeof($loaded)) {
    echo "Cannot find an autoloader file, have you executed the composer install command?\n";
    exit(1);
}

Bldr\Application::create();
